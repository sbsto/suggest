name: Release

on:
  push:
    branches: [ main ]
    paths: [ 'main.go' ]

permissions:
  contents: write

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check.outputs.changed }}
      new-version: ${{ steps.check.outputs.version }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Check if version changed
      id: check
      run: |
        # Get current version from main.go
        CURRENT_VERSION=$(grep -oP 'const version = "\K[^"]+' main.go)
        echo "Current version: $CURRENT_VERSION"
        
        # Check if this version tag already exists
        if git rev-parse "v$CURRENT_VERSION" >/dev/null 2>&1; then
          echo "Version v$CURRENT_VERSION already exists"
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "New version detected: v$CURRENT_VERSION"
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        fi

  release:
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
        
    - name: Build binaries
      run: |
        # Build for macOS (Intel)
        GOOS=darwin GOARCH=amd64 go build -o suggest-darwin-amd64 .
        
        # Build for macOS (Apple Silicon)
        GOOS=darwin GOARCH=arm64 go build -o suggest-darwin-arm64 .
        
        # Build for Linux
        GOOS=linux GOARCH=amd64 go build -o suggest-linux-amd64 .
        
        # Create universal macOS binary
        lipo -create -output suggest-darwin-universal suggest-darwin-amd64 suggest-darwin-arm64 || cp suggest-darwin-arm64 suggest-darwin-universal
    
    - name: Calculate SHA256
      id: sha
      run: |
        SHA256=$(sha256sum suggest-darwin-universal | cut -d' ' -f1)
        echo "sha256=$SHA256" >> $GITHUB_OUTPUT
        
    - name: Update Homebrew tap
      run: |
        # Clone the homebrew tap repo
        gh repo clone sbsto/homebrew-suggest tap-repo
        cd tap-repo
        
        # Update the formula
        sed -i "s/version \".*\"/version \"${{ needs.check-version.outputs.new-version }}\"/" Formula/suggest.rb
        sed -i "s|download/v.*/|download/v${{ needs.check-version.outputs.new-version }}/|" Formula/suggest.rb
        sed -i "s/sha256 \".*\"/sha256 \"${{ steps.sha.outputs.sha256 }}\"/" Formula/suggest.rb
        
        # Commit and push changes
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add Formula/suggest.rb
        git commit -m "Update formula for suggest v${{ needs.check-version.outputs.new-version }}"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create and push tag
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag "v${{ needs.check-version.outputs.new-version }}"
        git push origin "v${{ needs.check-version.outputs.new-version }}"
        
    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v${{ needs.check-version.outputs.new-version }}"
        files: |
          suggest-darwin-universal
          suggest-darwin-amd64
          suggest-darwin-arm64
          suggest-linux-amd64
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}